// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.1
// source: mob-api.proto

package gerns_world_protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// .
type RegisterMobHandler struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MobType uint32 `protobuf:"varint,1,opt,name=mob_type,json=mobType,proto3" json:"mob_type,omitempty"`
}

func (x *RegisterMobHandler) Reset() {
	*x = RegisterMobHandler{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mob_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterMobHandler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterMobHandler) ProtoMessage() {}

func (x *RegisterMobHandler) ProtoReflect() protoreflect.Message {
	mi := &file_mob_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterMobHandler.ProtoReflect.Descriptor instead.
func (*RegisterMobHandler) Descriptor() ([]byte, []int) {
	return file_mob_api_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterMobHandler) GetMobType() uint32 {
	if x != nil {
		return x.MobType
	}
	return 0
}

// *
// Request a move to a specific tile. Note the server will do path finding.
type MobMoveToAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MobId uint32 `protobuf:"varint,1,opt,name=mob_id,json=mobId,proto3" json:"mob_id,omitempty"`
	X     uint32 `protobuf:"varint,2,opt,name=x,proto3" json:"x,omitempty"`
	Y     uint32 `protobuf:"varint,3,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *MobMoveToAction) Reset() {
	*x = MobMoveToAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mob_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MobMoveToAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MobMoveToAction) ProtoMessage() {}

func (x *MobMoveToAction) ProtoReflect() protoreflect.Message {
	mi := &file_mob_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MobMoveToAction.ProtoReflect.Descriptor instead.
func (*MobMoveToAction) Descriptor() ([]byte, []int) {
	return file_mob_api_proto_rawDescGZIP(), []int{1}
}

func (x *MobMoveToAction) GetMobId() uint32 {
	if x != nil {
		return x.MobId
	}
	return 0
}

func (x *MobMoveToAction) GetX() uint32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *MobMoveToAction) GetY() uint32 {
	if x != nil {
		return x.Y
	}
	return 0
}

// *
// A mob is feeding in the specified tile. Some creatures can feed in the current tile, some in adjascent
// tiles, some both. Mobs must know what their feeding style is; the server will just check if it is valid and
// the event will not occur if it is not valid.
type MobFeedAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MobId uint32 `protobuf:"varint,1,opt,name=mob_id,json=mobId,proto3" json:"mob_id,omitempty"`
	X     uint32 `protobuf:"varint,2,opt,name=x,proto3" json:"x,omitempty"`
	Y     uint32 `protobuf:"varint,3,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *MobFeedAction) Reset() {
	*x = MobFeedAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mob_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MobFeedAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MobFeedAction) ProtoMessage() {}

func (x *MobFeedAction) ProtoReflect() protoreflect.Message {
	mi := &file_mob_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MobFeedAction.ProtoReflect.Descriptor instead.
func (*MobFeedAction) Descriptor() ([]byte, []int) {
	return file_mob_api_proto_rawDescGZIP(), []int{2}
}

func (x *MobFeedAction) GetMobId() uint32 {
	if x != nil {
		return x.MobId
	}
	return 0
}

func (x *MobFeedAction) GetX() uint32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *MobFeedAction) GetY() uint32 {
	if x != nil {
		return x.Y
	}
	return 0
}

// *
// Associate an existing MOB with a registered handler.
type RegisterMobEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MobId   uint32 `protobuf:"varint,1,opt,name=mob_id,json=mobId,proto3" json:"mob_id,omitempty"`
	MobType uint32 `protobuf:"varint,2,opt,name=mob_type,json=mobType,proto3" json:"mob_type,omitempty"`
	X       uint32 `protobuf:"varint,3,opt,name=x,proto3" json:"x,omitempty"`
	Y       uint32 `protobuf:"varint,4,opt,name=y,proto3" json:"y,omitempty"`
	// Accessible terrain type bitmask
	Terrain uint32 `protobuf:"varint,5,opt,name=terrain,proto3" json:"terrain,omitempty"`
}

func (x *RegisterMobEvent) Reset() {
	*x = RegisterMobEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mob_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterMobEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterMobEvent) ProtoMessage() {}

func (x *RegisterMobEvent) ProtoReflect() protoreflect.Message {
	mi := &file_mob_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterMobEvent.ProtoReflect.Descriptor instead.
func (*RegisterMobEvent) Descriptor() ([]byte, []int) {
	return file_mob_api_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterMobEvent) GetMobId() uint32 {
	if x != nil {
		return x.MobId
	}
	return 0
}

func (x *RegisterMobEvent) GetMobType() uint32 {
	if x != nil {
		return x.MobType
	}
	return 0
}

func (x *RegisterMobEvent) GetX() uint32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *RegisterMobEvent) GetY() uint32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *RegisterMobEvent) GetTerrain() uint32 {
	if x != nil {
		return x.Terrain
	}
	return 0
}

// *
// Disassociate the mob from the handler
type DeregisterMobEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MobId uint32 `protobuf:"varint,1,opt,name=mob_id,json=mobId,proto3" json:"mob_id,omitempty"`
}

func (x *DeregisterMobEvent) Reset() {
	*x = DeregisterMobEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mob_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeregisterMobEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeregisterMobEvent) ProtoMessage() {}

func (x *DeregisterMobEvent) ProtoReflect() protoreflect.Message {
	mi := &file_mob_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeregisterMobEvent.ProtoReflect.Descriptor instead.
func (*DeregisterMobEvent) Descriptor() ([]byte, []int) {
	return file_mob_api_proto_rawDescGZIP(), []int{4}
}

func (x *DeregisterMobEvent) GetMobId() uint32 {
	if x != nil {
		return x.MobId
	}
	return 0
}

// *
// Gives a MOB location, a vector (if applicable), and a velocity (if applicable).
type MobEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// MOB performing the action
	MobId uint32 `protobuf:"varint,1,opt,name=mob_id,json=mobId,proto3" json:"mob_id,omitempty"`
	// Position
	X uint32 `protobuf:"varint,2,opt,name=x,proto3" json:"x,omitempty"`
	Y uint32 `protobuf:"varint,3,opt,name=y,proto3" json:"y,omitempty"`
	// Vector/Direction the MOB is looking, and possibly moving
	Dx uint32 `protobuf:"varint,4,opt,name=dx,proto3" json:"dx,omitempty"`
	Dy uint32 `protobuf:"varint,5,opt,name=dy,proto3" json:"dy,omitempty"`
	// Time (in milliseconds)
	// If v is 0 then the MOB is not moving
	V       uint32 `protobuf:"varint,6,opt,name=v,proto3" json:"v,omitempty"`
	MobType uint32 `protobuf:"varint,7,opt,name=mob_type,json=mobType,proto3" json:"mob_type,omitempty"`
	// MOB to inform of the action
	InformMobId uint32 `protobuf:"varint,8,opt,name=inform_mob_id,json=informMobId,proto3" json:"inform_mob_id,omitempty"`
}

func (x *MobEvent) Reset() {
	*x = MobEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mob_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MobEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MobEvent) ProtoMessage() {}

func (x *MobEvent) ProtoReflect() protoreflect.Message {
	mi := &file_mob_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MobEvent.ProtoReflect.Descriptor instead.
func (*MobEvent) Descriptor() ([]byte, []int) {
	return file_mob_api_proto_rawDescGZIP(), []int{5}
}

func (x *MobEvent) GetMobId() uint32 {
	if x != nil {
		return x.MobId
	}
	return 0
}

func (x *MobEvent) GetX() uint32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *MobEvent) GetY() uint32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *MobEvent) GetDx() uint32 {
	if x != nil {
		return x.Dx
	}
	return 0
}

func (x *MobEvent) GetDy() uint32 {
	if x != nil {
		return x.Dy
	}
	return 0
}

func (x *MobEvent) GetV() uint32 {
	if x != nil {
		return x.V
	}
	return 0
}

func (x *MobEvent) GetMobType() uint32 {
	if x != nil {
		return x.MobType
	}
	return 0
}

func (x *MobEvent) GetInformMobId() uint32 {
	if x != nil {
		return x.InformMobId
	}
	return 0
}

// *
// Gives a MOB location, a vector (if applicable), and a velocity (if applicable).
type MobStatusEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// MOB to inform of the action
	InformMobId uint32 `protobuf:"varint,1,opt,name=inform_mob_id,json=informMobId,proto3" json:"inform_mob_id,omitempty"`
	// MOB being updated
	MobId    uint32 `protobuf:"varint,2,opt,name=mob_id,json=mobId,proto3" json:"mob_id,omitempty"`
	Health   uint32 `protobuf:"varint,3,opt,name=health,proto3" json:"health,omitempty"`
	Energy   uint32 `protobuf:"varint,4,opt,name=energy,proto3" json:"energy,omitempty"`
	Calories uint32 `protobuf:"varint,5,opt,name=calories,proto3" json:"calories,omitempty"`
}

func (x *MobStatusEvent) Reset() {
	*x = MobStatusEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mob_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MobStatusEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MobStatusEvent) ProtoMessage() {}

func (x *MobStatusEvent) ProtoReflect() protoreflect.Message {
	mi := &file_mob_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MobStatusEvent.ProtoReflect.Descriptor instead.
func (*MobStatusEvent) Descriptor() ([]byte, []int) {
	return file_mob_api_proto_rawDescGZIP(), []int{6}
}

func (x *MobStatusEvent) GetInformMobId() uint32 {
	if x != nil {
		return x.InformMobId
	}
	return 0
}

func (x *MobStatusEvent) GetMobId() uint32 {
	if x != nil {
		return x.MobId
	}
	return 0
}

func (x *MobStatusEvent) GetHealth() uint32 {
	if x != nil {
		return x.Health
	}
	return 0
}

func (x *MobStatusEvent) GetEnergy() uint32 {
	if x != nil {
		return x.Energy
	}
	return 0
}

func (x *MobStatusEvent) GetCalories() uint32 {
	if x != nil {
		return x.Calories
	}
	return 0
}

// *
// Send any change in surroundings to the client.
type MapEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// MOB the event is intended for
	MobId uint32 `protobuf:"varint,1,opt,name=mob_id,json=mobId,proto3" json:"mob_id,omitempty"`
	// Upper left origin of update
	X uint32 `protobuf:"varint,2,opt,name=x,proto3" json:"x,omitempty"`
	Y uint32 `protobuf:"varint,3,opt,name=y,proto3" json:"y,omitempty"`
	// Width/height of the update
	Width  uint32 `protobuf:"varint,4,opt,name=width,proto3" json:"width,omitempty"`
	Height uint32 `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
	// Bytes in the update
	Map []byte `protobuf:"bytes,6,opt,name=map,proto3" json:"map,omitempty"`
}

func (x *MapEvent) Reset() {
	*x = MapEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mob_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapEvent) ProtoMessage() {}

func (x *MapEvent) ProtoReflect() protoreflect.Message {
	mi := &file_mob_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapEvent.ProtoReflect.Descriptor instead.
func (*MapEvent) Descriptor() ([]byte, []int) {
	return file_mob_api_proto_rawDescGZIP(), []int{7}
}

func (x *MapEvent) GetMobId() uint32 {
	if x != nil {
		return x.MobId
	}
	return 0
}

func (x *MapEvent) GetX() uint32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *MapEvent) GetY() uint32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *MapEvent) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *MapEvent) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *MapEvent) GetMap() []byte {
	if x != nil {
		return x.Map
	}
	return nil
}

// *
// Event controlling the flow of time, telling the handler how quickly time is running.
//
// Note that a busy server might not be able to keep up with the suggested TPS (Ticks Per Second).
// We are going to have to do some thinking about how to handle this situation. The server should watch
// itself and adapt.
type TimeEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of ticks per second, where a "tick" it a discrete span of time within which the server
	// performs updates, which means a handler needs to send requests within that span of time if it
	// wants to be executed in a timely manner.
	Tps uint32 `protobuf:"varint,1,opt,name=tps,proto3" json:"tps,omitempty"`
}

func (x *TimeEvent) Reset() {
	*x = TimeEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mob_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeEvent) ProtoMessage() {}

func (x *TimeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_mob_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeEvent.ProtoReflect.Descriptor instead.
func (*TimeEvent) Descriptor() ([]byte, []int) {
	return file_mob_api_proto_rawDescGZIP(), []int{8}
}

func (x *TimeEvent) GetTps() uint32 {
	if x != nil {
		return x.Tps
	}
	return 0
}

type EnvironmentEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Light is a number from 0 to 100, where 0 is pitch black and 100 is full daylight
	Light uint32 `protobuf:"varint,3,opt,name=light,proto3" json:"light,omitempty"`
	// Temperature is in degrees Celsius
	Temperature int32 `protobuf:"varint,4,opt,name=temperature,proto3" json:"temperature,omitempty"`
	// Wind speed in m/s
	WindSpeed uint32 `protobuf:"varint,5,opt,name=wind_speed,json=windSpeed,proto3" json:"wind_speed,omitempty"`
	// Wind direction in degrees
	WindDirection uint32 `protobuf:"varint,6,opt,name=wind_direction,json=windDirection,proto3" json:"wind_direction,omitempty"`
	// Rainfall intensity where 0 is no rain and 100 is a monsoon
	Rainfall uint32 `protobuf:"varint,7,opt,name=rainfall,proto3" json:"rainfall,omitempty"`
	// Snowfall intensity where 0 is no snow and 100 is a blizzard
	Snowfall uint32 `protobuf:"varint,8,opt,name=snowfall,proto3" json:"snowfall,omitempty"`
	// Cloud cover in percent, where 0 is clear skies and 100 is overcast
	CloudCover uint32 `protobuf:"varint,9,opt,name=cloud_cover,json=cloudCover,proto3" json:"cloud_cover,omitempty"`
	// Fog intensity in percent, where 0 is no fog and 100 is a whiteout
	Fog uint32 `protobuf:"varint,10,opt,name=fog,proto3" json:"fog,omitempty"`
	// Humidity in percent, where 0 is bone dry and 100 is a rainforest
	Humidity uint32 `protobuf:"varint,11,opt,name=humidity,proto3" json:"humidity,omitempty"`
}

func (x *EnvironmentEvent) Reset() {
	*x = EnvironmentEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mob_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvironmentEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentEvent) ProtoMessage() {}

func (x *EnvironmentEvent) ProtoReflect() protoreflect.Message {
	mi := &file_mob_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentEvent.ProtoReflect.Descriptor instead.
func (*EnvironmentEvent) Descriptor() ([]byte, []int) {
	return file_mob_api_proto_rawDescGZIP(), []int{9}
}

func (x *EnvironmentEvent) GetLight() uint32 {
	if x != nil {
		return x.Light
	}
	return 0
}

func (x *EnvironmentEvent) GetTemperature() int32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *EnvironmentEvent) GetWindSpeed() uint32 {
	if x != nil {
		return x.WindSpeed
	}
	return 0
}

func (x *EnvironmentEvent) GetWindDirection() uint32 {
	if x != nil {
		return x.WindDirection
	}
	return 0
}

func (x *EnvironmentEvent) GetRainfall() uint32 {
	if x != nil {
		return x.Rainfall
	}
	return 0
}

func (x *EnvironmentEvent) GetSnowfall() uint32 {
	if x != nil {
		return x.Snowfall
	}
	return 0
}

func (x *EnvironmentEvent) GetCloudCover() uint32 {
	if x != nil {
		return x.CloudCover
	}
	return 0
}

func (x *EnvironmentEvent) GetFog() uint32 {
	if x != nil {
		return x.Fog
	}
	return 0
}

func (x *EnvironmentEvent) GetHumidity() uint32 {
	if x != nil {
		return x.Humidity
	}
	return 0
}

type MobStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to EventType:
	//
	//	*MobStreamRequest_Move
	//	*MobStreamRequest_Register
	//	*MobStreamRequest_Feed
	EventType isMobStreamRequest_EventType `protobuf_oneof:"EventType"`
}

func (x *MobStreamRequest) Reset() {
	*x = MobStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mob_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MobStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MobStreamRequest) ProtoMessage() {}

func (x *MobStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mob_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MobStreamRequest.ProtoReflect.Descriptor instead.
func (*MobStreamRequest) Descriptor() ([]byte, []int) {
	return file_mob_api_proto_rawDescGZIP(), []int{10}
}

func (m *MobStreamRequest) GetEventType() isMobStreamRequest_EventType {
	if m != nil {
		return m.EventType
	}
	return nil
}

func (x *MobStreamRequest) GetMove() *MobMoveToAction {
	if x, ok := x.GetEventType().(*MobStreamRequest_Move); ok {
		return x.Move
	}
	return nil
}

func (x *MobStreamRequest) GetRegister() *RegisterMobHandler {
	if x, ok := x.GetEventType().(*MobStreamRequest_Register); ok {
		return x.Register
	}
	return nil
}

func (x *MobStreamRequest) GetFeed() *MobFeedAction {
	if x, ok := x.GetEventType().(*MobStreamRequest_Feed); ok {
		return x.Feed
	}
	return nil
}

type isMobStreamRequest_EventType interface {
	isMobStreamRequest_EventType()
}

type MobStreamRequest_Move struct {
	Move *MobMoveToAction `protobuf:"bytes,1,opt,name=move,proto3,oneof"`
}

type MobStreamRequest_Register struct {
	Register *RegisterMobHandler `protobuf:"bytes,2,opt,name=register,proto3,oneof"`
}

type MobStreamRequest_Feed struct {
	Feed *MobFeedAction `protobuf:"bytes,3,opt,name=feed,proto3,oneof"`
}

func (*MobStreamRequest_Move) isMobStreamRequest_EventType() {}

func (*MobStreamRequest_Register) isMobStreamRequest_EventType() {}

func (*MobStreamRequest_Feed) isMobStreamRequest_EventType() {}

type MobStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to EventType:
	//
	//	*MobStreamResponse_MobEvent
	//	*MobStreamResponse_MapEvent
	//	*MobStreamResponse_RegisterEvent
	//	*MobStreamResponse_DeregisterEvent
	//	*MobStreamResponse_TimeEvent
	//	*MobStreamResponse_MobStatusEvent
	//	*MobStreamResponse_EnvironmentEvent
	EventType isMobStreamResponse_EventType `protobuf_oneof:"EventType"`
}

func (x *MobStreamResponse) Reset() {
	*x = MobStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mob_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MobStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MobStreamResponse) ProtoMessage() {}

func (x *MobStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mob_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MobStreamResponse.ProtoReflect.Descriptor instead.
func (*MobStreamResponse) Descriptor() ([]byte, []int) {
	return file_mob_api_proto_rawDescGZIP(), []int{11}
}

func (m *MobStreamResponse) GetEventType() isMobStreamResponse_EventType {
	if m != nil {
		return m.EventType
	}
	return nil
}

func (x *MobStreamResponse) GetMobEvent() *MobEvent {
	if x, ok := x.GetEventType().(*MobStreamResponse_MobEvent); ok {
		return x.MobEvent
	}
	return nil
}

func (x *MobStreamResponse) GetMapEvent() *MapEvent {
	if x, ok := x.GetEventType().(*MobStreamResponse_MapEvent); ok {
		return x.MapEvent
	}
	return nil
}

func (x *MobStreamResponse) GetRegisterEvent() *RegisterMobEvent {
	if x, ok := x.GetEventType().(*MobStreamResponse_RegisterEvent); ok {
		return x.RegisterEvent
	}
	return nil
}

func (x *MobStreamResponse) GetDeregisterEvent() *DeregisterMobEvent {
	if x, ok := x.GetEventType().(*MobStreamResponse_DeregisterEvent); ok {
		return x.DeregisterEvent
	}
	return nil
}

func (x *MobStreamResponse) GetTimeEvent() *TimeEvent {
	if x, ok := x.GetEventType().(*MobStreamResponse_TimeEvent); ok {
		return x.TimeEvent
	}
	return nil
}

func (x *MobStreamResponse) GetMobStatusEvent() *MobStatusEvent {
	if x, ok := x.GetEventType().(*MobStreamResponse_MobStatusEvent); ok {
		return x.MobStatusEvent
	}
	return nil
}

func (x *MobStreamResponse) GetEnvironmentEvent() *EnvironmentEvent {
	if x, ok := x.GetEventType().(*MobStreamResponse_EnvironmentEvent); ok {
		return x.EnvironmentEvent
	}
	return nil
}

type isMobStreamResponse_EventType interface {
	isMobStreamResponse_EventType()
}

type MobStreamResponse_MobEvent struct {
	MobEvent *MobEvent `protobuf:"bytes,1,opt,name=mobEvent,proto3,oneof"` // A mob is doing something
}

type MobStreamResponse_MapEvent struct {
	MapEvent *MapEvent `protobuf:"bytes,2,opt,name=mapEvent,proto3,oneof"` // There is a map update
}

type MobStreamResponse_RegisterEvent struct {
	RegisterEvent *RegisterMobEvent `protobuf:"bytes,3,opt,name=registerEvent,proto3,oneof"`
}

type MobStreamResponse_DeregisterEvent struct {
	DeregisterEvent *DeregisterMobEvent `protobuf:"bytes,4,opt,name=deregisterEvent,proto3,oneof"`
}

type MobStreamResponse_TimeEvent struct {
	TimeEvent *TimeEvent `protobuf:"bytes,5,opt,name=timeEvent,proto3,oneof"`
}

type MobStreamResponse_MobStatusEvent struct {
	MobStatusEvent *MobStatusEvent `protobuf:"bytes,6,opt,name=mobStatusEvent,proto3,oneof"` // A mob's stats have changed
}

type MobStreamResponse_EnvironmentEvent struct {
	EnvironmentEvent *EnvironmentEvent `protobuf:"bytes,7,opt,name=environmentEvent,proto3,oneof"` // Something changed in the environment
}

func (*MobStreamResponse_MobEvent) isMobStreamResponse_EventType() {}

func (*MobStreamResponse_MapEvent) isMobStreamResponse_EventType() {}

func (*MobStreamResponse_RegisterEvent) isMobStreamResponse_EventType() {}

func (*MobStreamResponse_DeregisterEvent) isMobStreamResponse_EventType() {}

func (*MobStreamResponse_TimeEvent) isMobStreamResponse_EventType() {}

func (*MobStreamResponse_MobStatusEvent) isMobStreamResponse_EventType() {}

func (*MobStreamResponse_EnvironmentEvent) isMobStreamResponse_EventType() {}

var File_mob_api_proto protoreflect.FileDescriptor

var file_mob_api_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x6f, 0x62, 0x2d, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0a, 0x67, 0x65, 0x72, 0x6e, 0x73, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x22, 0x2f, 0x0a, 0x12, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x6f, 0x62, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x22, 0x44, 0x0a, 0x0f,
	0x4d, 0x6f, 0x62, 0x4d, 0x6f, 0x76, 0x65, 0x54, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x15, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x6d, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x01, 0x79, 0x22, 0x42, 0x0a, 0x0d, 0x4d, 0x6f, 0x62, 0x46, 0x65, 0x65, 0x64, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x01, 0x79, 0x22, 0x7a, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x4d, 0x6f, 0x62, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x6f,
	0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x6f, 0x62, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x01,
	0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x65, 0x72, 0x72,
	0x61, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x65, 0x72, 0x72, 0x61,
	0x69, 0x6e, 0x22, 0x2b, 0x0a, 0x12, 0x44, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x4d, 0x6f, 0x62, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x6f, 0x62, 0x49, 0x64, 0x22,
	0xaa, 0x01, 0x0a, 0x08, 0x4d, 0x6f, 0x62, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x6d, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x6f,
	0x62, 0x49, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01,
	0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x64, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x64, 0x78, 0x12,
	0x0e, 0x0a, 0x02, 0x64, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x64, 0x79, 0x12,
	0x0c, 0x0a, 0x01, 0x76, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x76, 0x12, 0x19, 0x0a,
	0x08, 0x6d, 0x6f, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x6d, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x5f, 0x6d, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x6f, 0x62, 0x49, 0x64, 0x22, 0x97, 0x01, 0x0a,
	0x0e, 0x4d, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x22, 0x0a, 0x0d, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6d, 0x6f, 0x62, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x6f,
	0x62, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61,
	0x6c, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x61,
	0x6c, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0x7d, 0x0a, 0x08, 0x4d, 0x61, 0x70, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6d, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x01, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x03, 0x6d, 0x61, 0x70, 0x22, 0x1d, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x70, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x74, 0x70, 0x73, 0x22, 0x97, 0x02, 0x0a, 0x10, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x69, 0x6e, 0x64, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x77, 0x69, 0x6e, 0x64, 0x53, 0x70, 0x65, 0x65, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x77, 0x69, 0x6e, 0x64, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x77, 0x69, 0x6e, 0x64, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x61, 0x69, 0x6e, 0x66,
	0x61, 0x6c, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x61, 0x69, 0x6e, 0x66,
	0x61, 0x6c, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6e, 0x6f, 0x77, 0x66, 0x61, 0x6c, 0x6c, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x6e, 0x6f, 0x77, 0x66, 0x61, 0x6c, 0x6c, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x6f, 0x76, 0x65, 0x72,
	0x12, 0x10, 0x0a, 0x03, 0x66, 0x6f, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x66,
	0x6f, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x68, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x22, 0xc1,
	0x01, 0x0a, 0x10, 0x4d, 0x6f, 0x62, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x04, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x65, 0x72, 0x6e, 0x73, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x4d,
	0x6f, 0x62, 0x4d, 0x6f, 0x76, 0x65, 0x54, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x04, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x3c, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x65, 0x72, 0x6e, 0x73,
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x6f,
	0x62, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x04, 0x66, 0x65, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x65, 0x72, 0x6e, 0x73, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e,
	0x4d, 0x6f, 0x62, 0x46, 0x65, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x04, 0x66, 0x65, 0x65, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x22, 0xe3, 0x03, 0x0a, 0x11, 0x4d, 0x6f, 0x62, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x6d, 0x6f, 0x62, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x65, 0x72,
	0x6e, 0x73, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x4d, 0x6f, 0x62, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x08, 0x6d, 0x6f, 0x62, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x08,
	0x6d, 0x61, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x65, 0x72, 0x6e, 0x73, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x4d, 0x61, 0x70, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x61, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x44, 0x0a, 0x0d, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x65, 0x72, 0x6e, 0x73, 0x77,
	0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x6f, 0x62,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x4a, 0x0a, 0x0f, 0x64, 0x65, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x67, 0x65, 0x72, 0x6e, 0x73, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x44, 0x65, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x6f, 0x62, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x0f, 0x64, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x35, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x65, 0x72, 0x6e, 0x73, 0x77, 0x6f, 0x72,
	0x6c, 0x64, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x44, 0x0a, 0x0e, 0x6d, 0x6f, 0x62,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x65, 0x72, 0x6e, 0x73, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x4d,
	0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52,
	0x0e, 0x6d, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x4a, 0x0a, 0x10, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x65, 0x72, 0x6e,
	0x73, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x10, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x32, 0x60, 0x0a, 0x0a, 0x4d, 0x6f, 0x62, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4d, 0x6f, 0x62, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x1c, 0x2e, 0x67, 0x65, 0x72, 0x6e,
	0x73, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x4d, 0x6f, 0x62, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x65, 0x72, 0x6e, 0x73, 0x77,
	0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x4d, 0x6f, 0x62, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x19, 0x5a, 0x17, 0x2e, 0x2e,
	0x2f, 0x67, 0x65, 0x72, 0x6e, 0x73, 0x2d, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mob_api_proto_rawDescOnce sync.Once
	file_mob_api_proto_rawDescData = file_mob_api_proto_rawDesc
)

func file_mob_api_proto_rawDescGZIP() []byte {
	file_mob_api_proto_rawDescOnce.Do(func() {
		file_mob_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_mob_api_proto_rawDescData)
	})
	return file_mob_api_proto_rawDescData
}

var file_mob_api_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_mob_api_proto_goTypes = []interface{}{
	(*RegisterMobHandler)(nil), // 0: gernsworld.RegisterMobHandler
	(*MobMoveToAction)(nil),    // 1: gernsworld.MobMoveToAction
	(*MobFeedAction)(nil),      // 2: gernsworld.MobFeedAction
	(*RegisterMobEvent)(nil),   // 3: gernsworld.RegisterMobEvent
	(*DeregisterMobEvent)(nil), // 4: gernsworld.DeregisterMobEvent
	(*MobEvent)(nil),           // 5: gernsworld.MobEvent
	(*MobStatusEvent)(nil),     // 6: gernsworld.MobStatusEvent
	(*MapEvent)(nil),           // 7: gernsworld.MapEvent
	(*TimeEvent)(nil),          // 8: gernsworld.TimeEvent
	(*EnvironmentEvent)(nil),   // 9: gernsworld.EnvironmentEvent
	(*MobStreamRequest)(nil),   // 10: gernsworld.MobStreamRequest
	(*MobStreamResponse)(nil),  // 11: gernsworld.MobStreamResponse
}
var file_mob_api_proto_depIdxs = []int32{
	1,  // 0: gernsworld.MobStreamRequest.move:type_name -> gernsworld.MobMoveToAction
	0,  // 1: gernsworld.MobStreamRequest.register:type_name -> gernsworld.RegisterMobHandler
	2,  // 2: gernsworld.MobStreamRequest.feed:type_name -> gernsworld.MobFeedAction
	5,  // 3: gernsworld.MobStreamResponse.mobEvent:type_name -> gernsworld.MobEvent
	7,  // 4: gernsworld.MobStreamResponse.mapEvent:type_name -> gernsworld.MapEvent
	3,  // 5: gernsworld.MobStreamResponse.registerEvent:type_name -> gernsworld.RegisterMobEvent
	4,  // 6: gernsworld.MobStreamResponse.deregisterEvent:type_name -> gernsworld.DeregisterMobEvent
	8,  // 7: gernsworld.MobStreamResponse.timeEvent:type_name -> gernsworld.TimeEvent
	6,  // 8: gernsworld.MobStreamResponse.mobStatusEvent:type_name -> gernsworld.MobStatusEvent
	9,  // 9: gernsworld.MobStreamResponse.environmentEvent:type_name -> gernsworld.EnvironmentEvent
	10, // 10: gernsworld.MobService.CreateMobStream:input_type -> gernsworld.MobStreamRequest
	11, // 11: gernsworld.MobService.CreateMobStream:output_type -> gernsworld.MobStreamResponse
	11, // [11:12] is the sub-list for method output_type
	10, // [10:11] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_mob_api_proto_init() }
func file_mob_api_proto_init() {
	if File_mob_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mob_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterMobHandler); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mob_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MobMoveToAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mob_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MobFeedAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mob_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterMobEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mob_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeregisterMobEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mob_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MobEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mob_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MobStatusEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mob_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mob_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mob_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvironmentEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mob_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MobStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mob_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MobStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_mob_api_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*MobStreamRequest_Move)(nil),
		(*MobStreamRequest_Register)(nil),
		(*MobStreamRequest_Feed)(nil),
	}
	file_mob_api_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*MobStreamResponse_MobEvent)(nil),
		(*MobStreamResponse_MapEvent)(nil),
		(*MobStreamResponse_RegisterEvent)(nil),
		(*MobStreamResponse_DeregisterEvent)(nil),
		(*MobStreamResponse_TimeEvent)(nil),
		(*MobStreamResponse_MobStatusEvent)(nil),
		(*MobStreamResponse_EnvironmentEvent)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mob_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mob_api_proto_goTypes,
		DependencyIndexes: file_mob_api_proto_depIdxs,
		MessageInfos:      file_mob_api_proto_msgTypes,
	}.Build()
	File_mob_api_proto = out.File
	file_mob_api_proto_rawDesc = nil
	file_mob_api_proto_goTypes = nil
	file_mob_api_proto_depIdxs = nil
}
